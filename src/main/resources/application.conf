akka {
  loglevel = INFO
  stream {
  	materializer {
  		blocking-io-dispatcher = "akka.stream.default-blocking-io-dispatcher"
  		default-blocking-io-dispatcher {
      		type = "Dispatcher"
      		executor = "thread-pool-executor"
      		throughput = 1
 
      		thread-pool-executor {
        		core-pool-size-min = 2
        		core-pool-size-factor = 2.0
       			core-pool-size-max = 16
      		}
  	}  	
  }
 }
  http {
    client {
      user-agent-header = akka-http/2.4.2
      connecting-timeout = 10s
      proxy {
        http {
          host = proxy.pershing.com
          port = 8080
        }
      }
    }
  }
}

spray.can.server {
  request-timeout = 10s
}



http.client {
  url = "https://api.thousandeyes.com:443/web/http-server/#key#?format=json&from=2017-03-21T10:00:00&aid=443"
  username = ""
  password = ""
  proxy = "http://abc:8080"
}  


oracledb {
  driver = "com.typesafe.slick.driver.oracle.OracleDriver$"
  db {
    url = "jdbc:oracle:thin:@//host:1611/servicename"
    driver = oracle.jdbc.driver.OracleDriver
    user=""
    password=""
  }
}

mysqldb {
  driver = "slick.driver.MySQLDriver$"
  db {
    url = "jdbc:mysql://localhost:3306/test"
    driver = com.mysql.jdbc.Driver
    user="root"
    password="root"
    numThreads = 10
  }
}

h2db {
  driver = "slick.driver.H2Driver$"
  db {
    url = "jdbc:h2:mem:test1"
    driver = org.h2.Driver
    keepAliveConnection = true
    numThreads = 10
  }
}

h2test {
  driver = "slick.driver.H2Driver$"
  db {
    url = "jdbc:h2:mem:testing"
    driver = org.h2.Driver
  }
}

pgdb {
  driver = "slick.driver.PostgresDriver$"
  db {
    url = "jdbc:postgresql:test1"
    driver = org.postgresql.Driver
    user="postgres"
    password="postgres"
    numThreads = 10
  }
}
